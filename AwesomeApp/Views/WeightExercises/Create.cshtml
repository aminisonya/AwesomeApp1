@{
    Layout = "~/Views/Shared/_LayoutThemed.cshtml";
}

@section styles {

    <style></style>

}

<div class="card">
    <div class="card-header">
        <h2>Add Weight Exercises Here</h2>
    </div>

    <div class="row card-body card-padding" ng-controller="WeightsController as main">
        <form class="form-horizontal" name="main.weightsForm" ng-submit="main.submitForm(main.weightsForm.$valid)" novalidate>

            <div class="form-group" ng-class="{'has-error' : main.weightsForm.exerciseName.$invalid && main.weightsForm.$submitted }">
                <label for="exerciseName" class="col-sm-2 control-label">Exercise Name</label>
                <div class="col-sm-10">
                    <div class="fg-line">
                        <input type="text" class="form-control" name="exerciseName" ng-model="main.weights.exerciseName" placeholder="Name of the exercise" required>
                        <span ng-show="main.weightsForm.exerciseName.$invalid && main.weightsForm.$submitted" class="help-block" style="color: red; display: block;">Please enter the name of the exercise</span>
                    </div>
                </div>
            </div>
            <div class="form-group" ng-class="{'has-error' : main.weightsForm.sets.$invalid && main.weightsForm.$submitted }">
                <label for="sets" class="col-sm-2 control-label"># of Sets</label>
                <div class="col-sm-10">
                    <div class="fg-line">
                        <input type="number" class="form-control" name="sets" ng-model="main.weights.sets" placeholder="# of sets performed" required>
                        <span ng-show="main.weightsForm.sets.$invalid && main.weightsForm.$submitted" class="help-block" style="color: red; display: block;">Please enter the # of sets performed</span>
                    </div>
                </div>
            </div>
            <div class="form-group" ng-class="{'has-error' : main.weightsForm.reps.$invalid && main.weightsForm.$submitted }">
                <label for="reps" class="col-sm-2 control-label"># of Reps</label>
                <div class="col-sm-10">
                    <div class="fg-line">
                        <input type="number" class="form-control" name="reps" ng-model="main.weights.reps" placeholder="# of reps performed per set" required>
                        <span ng-show="main.weightsForm.reps.$invalid && main.weightsForm.$submitted" class="help-block" style="color: red; display: block;">Please enter the # of reps performed each set</span>
                    </div>
                </div>
            </div>
            <div class="form-group" ng-class="{'has-error' : main.weightsForm.weight.$invalid && main.weightsForm.$submitted }">
                <label for="weight" class="col-sm-2 control-label">Weight (lbs)</label>
                <div class="col-sm-10">
                    <div class="fg-line">
                        <input type="number" class="form-control" name="weight" ng-model="main.weights.weight" placeholder="Weight used for exercise" required>
                        <span ng-show="main.weightsForm.weight.$invalid && main.weightsForm.$submitted" class="help-block" style="color: red; display: block;">Please enter a # for the weight used</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary btn-sm">Add</button>
                    <button type="button" class="btn btn-danger btn-sm" ng-click="main.resetForm()">Reset</button>
                </div>
            </div>

        </form>

    </div>
</div>

@section scripts {

    <script src="~/Scripts/services/services.weightsfactory.js"></script>

    <script type="text/javascript">
        (function () {
            'use strict';

            angular.module(APPNAME).controller('WeightsController', WeightsController);

            WeightsController.$inject = ['$scope', 'appConfig', 'weightsDataFactory'];

            function WeightsController($scope, appConfig, weightsDataFactory) {
                var vm = this;
                vm.$scope = $scope;
                vm.appConfig = appConfig;
                vm.weightsDataFactory = weightsDataFactory;
                vm.submitForm = _submitForm;
                vm.resetForm = _resetForm;

                //success and error functions
                vm.onCompletionInsert = _onCompletionInsert;
                vm.onFailureInsert = _onFailureInsert;

                function _submitForm(isValid) {
                    if (isValid) {
                        var exerciseInfo = {
                            workoutId: 1,
                            exerciseName: vm.weights.exerciseName,
                            sets: vm.weights.sets,
                            reps: vm.weights.reps,
                            weight: vm.weights.weight
                        }

                        vm.weightsDataFactory.insertWeightExercise(exerciseInfo)
                            .then(_onCompletionInsert)
                            .catch(_onFailureInsert);
                    }
                }

                function _onCompletionInsert(response) {
                    console.log(response);
                }

                function _onFailureInsert(error) {
                    console.log(error);
                }

                function _resetForm() {
                    vm.weights.exerciseName = null;
                    vm.weights.sets = null;
                    vm.weights.reps = null;
                    vm.weights.weight = null;
                }
            }
        })();
    </script>

}
